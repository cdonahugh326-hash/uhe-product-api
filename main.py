from fastapi import FastAPI, Query
from fastapi.middleware.cors import CORSMiddleware
import pandas as pd

# Load Excel
df = pd.read_excel("UHE_Visual_Product_Catalog_AutoGenerated.xlsx")

# Normalize trailing spaces in column names
df.columns = [col.strip() for col in df.columns]

# Filter: only keep complete rows
required_cols = ['Product Name', 'Variant', 'Brand', 'Category', 'Prompt Template', 'Image URL']
df_clean = df.dropna(subset=required_cols)

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.get("/")
def root():
    return {"message": "UHE Product API is Live!"}

@app.get("/getProduct")
def get_product_info(
    productName: str = Query(..., description="Name of the product to look up"),
    brandName: str = Query(None, description="Optional brand name to narrow results"),
    variant: str = Query(None, description="Optional variant to narrow results")
):
    # Fuzzy matching by name
    matches = df_clean[df_clean['Product Name'].str.lower() == productName.lower()]

    # Optional narrowing by brand
    if brandName:
        matches = matches[matches['Brand'].str.lower() == brandName.lower()]

    # Optional narrowing by variant
    if variant:
        matches = matches[matches['Variant'].str.lower() == variant.lower()]

    # No matches found
    if matches.empty:
        return {"error": "No matching product found."}

    # One exact match
    if len(matches) == 1:
        return matches.to_dict(orient="records")[0]

    # Multiple matches â€” return list for disambiguation
    options = [
        {
            "Product Name": row["Product Name"],
            "Variant": row["Variant"],
            "Brand": row["Brand"],
            "Category": row["Category"]
        }
        for _, row in matches.iterrows()
    ]
    return {"matches": options}
